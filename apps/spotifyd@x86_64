#!/usr/bin/env bash

set -euo pipefail

app_info() {
    utils:info "An open source Spotify client running as a UNIX daemon"
}

app_install() {
    local version="${1:-$(app_version)}"
    local package="$APP_NAME-linux-$APP_ARCH-full"

    # Set the package name for specific version
    if utils:compare_versions "${version#v}" lt "0.4.0"; then
		package="$APP_NAME-linux-full"
    fi

    utils:get_file \
        "https://github.com/Spotifyd/spotifyd/releases/download/$version/$package.tar.gz" \
        "$SDD_TEMP_DIR/$package.tar.gz"
    utils:extract "$SDD_TEMP_DIR/$package.tar.gz"

    utils:get_file \
        "https://github.com/Spotifyd/spotifyd/archive/$version.tar.gz" \
        "$SDD_TEMP_DIR/$version.tar.gz"
    utils:extract "$SDD_TEMP_DIR/$version.tar.gz"

    cd "$SDD_TEMP_DIR" || exit 1

    app_remove

    install -vD -m755 "$APP_NAME" "$SDD_BIN_DIR/$APP_NAME" >&2

    # Install systemd service
    cd "$SDD_TEMP_DIR/$APP_NAME-${version#v}" || exit 1

    install -vD -m644 "contrib/$APP_NAME.service" \
        "${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user/$APP_NAME.service" >&2

    # correct path to binary
    sed -i "s%/usr/bin/spotifyd%$SDD_BIN_DIR/$APP_NAME%" \
        "${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user/$APP_NAME.service" >&2

    cat <<POST_INSTALL_MSG
$APP_NAME: Execute to enable and start the $APP_NAME service:
$APP_NAME: systemctl --user enable --now $APP_NAME.service
$APP_NAME: See https://github.com/Spotifyd/spotifyd#running-as-a-system-service
POST_INSTALL_MSG
}

app_remove() {
    rm -vf "$SDD_BIN_DIR/$APP_NAME" >&2
    rm -vf "${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user/$APP_NAME.service" >&2
}

app_version() {
    utils:github_latest_release 'Spotifyd/spotifyd'
}

SCRIPT_DIR="$(readlink -f "$(dirname "${BASH_SOURCE[0]}")")"

# shellcheck source=./_utils.sh
source "$SCRIPT_DIR/_utils.sh"

utils:parser "$@"
